{"ast":null,"code":"export const BASE_URL = 'https:/auth.nomoreparties.co/';\nfunction getRequest(url, options) {\n  return fetch(url, options).then(res => {\n    if (res.ok) {\n      return res.json();\n    }\n    throw new Error('Что-то пошло не так...');\n  });\n}\nexport const register = (password, email) => {\n  return getRequest(`${BASE_URL}signup`, {\n    method: 'POST',\n    headers: {\n      'Accept': 'application/json',\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      password,\n      email\n    })\n  });\n};\nexport const authorize = (email, password) => {\n  return getRequest(`${BASE_URL}signin`, {\n    method: 'POST',\n    headers: {\n      'Accept': 'application/json',\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      email,\n      password\n    })\n  }).then(data => {\n    console.log(data);\n    localStorage.setItem('jwt', data.token);\n    console.log(localStorage.getItem('jwt'));\n    return data;\n  });\n};\nexport const checkToken = token => {\n  return getRequest(`${BASE_URL}users/me`, {\n    method: 'GET',\n    headers: {\n      'Accept': 'application/json',\n      'Content-Type': 'application/json',\n      'Authorization': `Bearer ${token}`\n    }\n  });\n};","map":{"version":3,"names":["BASE_URL","getRequest","url","options","fetch","then","res","ok","json","Error","register","password","email","method","headers","body","JSON","stringify","authorize","data","console","log","localStorage","setItem","token","getItem","checkToken"],"sources":["/Users/maksimb/dev/react-mesto-auth/src/auth.js"],"sourcesContent":["export const BASE_URL = 'https:/auth.nomoreparties.co/';\n\n\nfunction getRequest(url, options) {\n  return fetch(url, options)\n  .then((res) => {\n      if(res.ok) {\n          return res.json()\n      }\n      throw new Error('Что-то пошло не так...')\n  });\n}\n\nexport const register = (password, email) => {\n  return getRequest(`${BASE_URL}signup`, {\n    method: 'POST',\n    headers: {\n      'Accept': 'application/json',\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({password, email})\n  })\n};\n\nexport const authorize = (email, password) => {\n  return getRequest(`${BASE_URL}signin`, {\n    method: 'POST',\n    headers: {\n      'Accept': 'application/json',\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({email, password})\n  })\n  .then((data) => {\n      console.log(data);\n      localStorage.setItem('jwt', data.token);\n      console.log(localStorage.getItem('jwt'));\n      return data;\n    })\n  };\n\n  export const checkToken = (token) => {\n    return getRequest(`${BASE_URL}users/me`, {\n      method: 'GET',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${token}`,\n      },\n    })\n  };\n  \n"],"mappings":"AAAA,OAAO,MAAMA,QAAQ,GAAG,+BAA+B;AAGvD,SAASC,UAAUA,CAACC,GAAG,EAAEC,OAAO,EAAE;EAChC,OAAOC,KAAK,CAACF,GAAG,EAAEC,OAAO,CAAC,CACzBE,IAAI,CAAEC,GAAG,IAAK;IACX,IAAGA,GAAG,CAACC,EAAE,EAAE;MACP,OAAOD,GAAG,CAACE,IAAI,CAAC,CAAC;IACrB;IACA,MAAM,IAAIC,KAAK,CAAC,wBAAwB,CAAC;EAC7C,CAAC,CAAC;AACJ;AAEA,OAAO,MAAMC,QAAQ,GAAGA,CAACC,QAAQ,EAAEC,KAAK,KAAK;EAC3C,OAAOX,UAAU,CAAE,GAAED,QAAS,QAAO,EAAE;IACrCa,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MACP,QAAQ,EAAE,kBAAkB;MAC5B,cAAc,EAAE;IAClB,CAAC;IACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;MAACN,QAAQ;MAAEC;IAAK,CAAC;EACxC,CAAC,CAAC;AACJ,CAAC;AAED,OAAO,MAAMM,SAAS,GAAGA,CAACN,KAAK,EAAED,QAAQ,KAAK;EAC5C,OAAOV,UAAU,CAAE,GAAED,QAAS,QAAO,EAAE;IACrCa,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MACP,QAAQ,EAAE,kBAAkB;MAC5B,cAAc,EAAE;IAClB,CAAC;IACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;MAACL,KAAK;MAAED;IAAQ,CAAC;EACxC,CAAC,CAAC,CACDN,IAAI,CAAEc,IAAI,IAAK;IACZC,OAAO,CAACC,GAAG,CAACF,IAAI,CAAC;IACjBG,YAAY,CAACC,OAAO,CAAC,KAAK,EAAEJ,IAAI,CAACK,KAAK,CAAC;IACvCJ,OAAO,CAACC,GAAG,CAACC,YAAY,CAACG,OAAO,CAAC,KAAK,CAAC,CAAC;IACxC,OAAON,IAAI;EACb,CAAC,CAAC;AACJ,CAAC;AAED,OAAO,MAAMO,UAAU,GAAIF,KAAK,IAAK;EACnC,OAAOvB,UAAU,CAAE,GAAED,QAAS,UAAS,EAAE;IACvCa,MAAM,EAAE,KAAK;IACbC,OAAO,EAAE;MACP,QAAQ,EAAE,kBAAkB;MAC5B,cAAc,EAAE,kBAAkB;MAClC,eAAe,EAAG,UAASU,KAAM;IACnC;EACF,CAAC,CAAC;AACJ,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}