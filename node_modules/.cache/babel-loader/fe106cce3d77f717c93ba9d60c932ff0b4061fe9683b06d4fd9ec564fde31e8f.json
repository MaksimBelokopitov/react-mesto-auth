{"ast":null,"code":"import React, { Component } from \"react\";\nclass Api extends React.Component {\n  constructor(props) {\n    super(props);\n    this._url = props.url;\n    this._headers = props.headers;\n  }\n  _getRequest(url, options) {\n    return fetch(url, options).then(res => {\n      if (res.ok) {\n        return res.json();\n      }\n      throw new Error('Что-то пошло не так...');\n    });\n  }\n  getUserInfo() {\n    return this._getRequest(`${this._url}/users/me`, {\n      method: 'GET',\n      headers: this._headers\n    });\n  }\n  getInitialCards() {\n    return this._getRequest(`${this._url}/cards`, {\n      method: 'GET',\n      headers: this._headers\n    });\n  }\n  getPageData() {\n    return Promise.all([this.getUserInfo(), this.getInitialCards()]);\n  }\n  setUserAvatar(link) {\n    return this._getRequest(`${this._url}/users/me/avatar`, {\n      method: 'PATCH',\n      headers: this._headers,\n      body: JSON.stringify({\n        avatar: link\n      })\n    });\n  }\n  setUserInfo(data) {\n    return this._getRequest(`${this._url}/users/me`, {\n      method: 'PATCH',\n      headers: this._headers,\n      body: JSON.stringify({\n        name: data.name,\n        about: data.about\n      })\n    });\n  }\n  createNewCard(data) {\n    return this._getRequest(`${this._url}/cards`, {\n      method: 'POST',\n      headers: this._headers,\n      body: JSON.stringify({\n        name: data.name,\n        link: data.link\n      })\n    });\n  }\n  deleteCard(data) {\n    return this._getRequest(`${this._url}/cards/${data}`, {\n      method: 'DELETE',\n      headers: this._headers\n    });\n  }\n  likeCard(data) {\n    return this._getRequest(`${this._url}/cards/${data}/likes`, {\n      method: 'PUT',\n      headers: this._headers\n    });\n  }\n  dislikeCard(data) {\n    return this._getRequest(`${this._url}/cards/${data}/likes`, {\n      method: 'DELETE',\n      headers: this._headers\n    });\n  }\n}\n;\nconst api = new Api({\n  url: 'https://mesto.nomoreparties.co/v1/cohort-76',\n  headers: {\n    authorization: '1d65643b-7511-4112-a760-a3ae3f707119',\n    'Content-Type': 'application/json'\n  }\n});\nexport default api;","map":{"version":3,"names":["React","Component","Api","constructor","props","_url","url","_headers","headers","_getRequest","options","fetch","then","res","ok","json","Error","getUserInfo","method","getInitialCards","getPageData","Promise","all","setUserAvatar","link","body","JSON","stringify","avatar","setUserInfo","data","name","about","createNewCard","deleteCard","likeCard","dislikeCard","api","authorization"],"sources":["/Users/maksimb/dev/mesto-react/mesto/src/components/utils/Api.js"],"sourcesContent":["import React, {Component} from \"react\";\n \n class Api extends React.Component {\n    constructor(props) {\n        super(props);\n        this._url = props.url;\n        this._headers = props.headers;\n    };\n\n    _getRequest (url, options) {\n        return fetch(url, options)\n        .then((res) => {\n            if(res.ok) {\n                return res.json()\n            }\n            throw new Error('Что-то пошло не так...')\n        });\n    };\n\n    getUserInfo(){\n       return this._getRequest(`${this._url}/users/me`, {\n        method: 'GET',\n        headers: this._headers\n       });\n    };\n\n    getInitialCards(){\n        return this._getRequest(`${this._url}/cards`, {\n          method: 'GET',\n          headers: this._headers\n          });\n      };\n\n    getPageData(){\n        return Promise.all([this.getUserInfo(), this.getInitialCards()])\n    };\n    \n    setUserAvatar(link){\n      return this._getRequest(`${this._url}/users/me/avatar`, {\n        method: 'PATCH',\n        headers: this._headers, \n        body: JSON.stringify({\n            avatar: link\n          })\n      });\n    };\n\n    setUserInfo(data){\n      return this._getRequest(`${this._url}/users/me`, {\n        method: 'PATCH',\n        headers: this._headers, \n        body: JSON.stringify({\n          name: data.name,\n          about: data.about\n          })\n        });\n    };\n\n    createNewCard(data){\n        return this._getRequest(`${this._url}/cards`, {\n            method: 'POST',\n            headers: this._headers, \n            body: JSON.stringify({\n              name: data.name,\n              link: data.link\n              })\n            }) ; \n    };\n\n    deleteCard(data){\n        return this._getRequest(`${this._url}/cards/${data}`, {\n            method: 'DELETE',\n            headers: this._headers, \n            })  \n    };\n\n   likeCard(data){\n      return this._getRequest(`${this._url}/cards/${data}/likes`, {\n          method: 'PUT',\n          headers: this._headers, \n          })  \n    };\n\n    dislikeCard(data){\n      return this._getRequest(`${this._url}/cards/${data}/likes`, {\n        method: 'DELETE',\n        headers: this._headers, \n        })  \n    };\n} ;\n\n const api = new Api({ \n  url: 'https://mesto.nomoreparties.co/v1/cohort-76',\n  headers: {\n  authorization: '1d65643b-7511-4112-a760-a3ae3f707119',\n  'Content-Type': 'application/json'}\n  });\n\n  export default api\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}